name: build & test

on:
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'json'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.json'
      - name: Parse Trivy scan results
        if: success() || failure()
        run: |
          vulnerabilities=$(jq -r '.[].Vulnerabilities | length' trivy-results.json)
          echo "::set-output name=vulnerabilities::$vulnerabilities"
      - name: Comment vulnerabilities on PR
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const vulnerabilities = '${{ steps.parse-results.outputs.vulnerabilities }}';
            const comment = `Trivy scan found ${vulnerabilities} vulnerabilities in the image.`;
            github.issues.createComment({ owner, repo, issue_number: prNumber, body: comment });